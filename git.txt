
— Config git

* add user name
/> git config --global user.name "USER_NAME"

* show user name
/> git config user.name

* user email
/> git config --global user.email "USER_EMAIL"

* show user email
/> git config user.email

* user password
/> git config --global user.password USER_PASSWORD

* show user password
/> git config user.password

* Add color to different results
/> git config --global color.ui true

* Look at all configurations
/> git config --global --list

* check version
/> git —-version



— Init git

* Init git
/> git init

* Look at new changes or general status of project
/> git status

* Show the commits done
/> git log

* Save history commits into a txt file
/> git log > commits.txt

* Go back to previous commit
/> git checkout COMMIT_NUMBER

* If stay in previous commit and want to return to last one
/> git checkout BRANCH_NAME

* Roll back to commit selected, but keeping all changes of removed commits
/> git reset --soft COMMIT_NUMBER

* Roll back to commit selected and remove completely the changes of removed commits
/> git reset --hard COMMIT_NUMBER



— Add new commits to git

* Add everything to commit
/> git add -A

* Add specific files to commit
/> git add FILE_PATH FILE_PATH ...

* First way to create a commit with message
/> git commit -m "COMMIT_COMMENT"

* Second way to create a commit
/> git commit
- Git will open an internal editor.
- After writting the comment, tap [esc] + :wq

* Change message of last commit
/> git commit --amend -m "COMMIT_COMMENT"

* First way to push new commits to repository
/> git push origin BRANCH_NAME

* Second way to push new commits to repository
/> git push



— Update local repositories

* Update the local repository
/> git fetch origin
/> git merge origin/BRANCH_NAME

* Another way to update
/> git pull



— Associate git to Github

* Start association
- Create a repository in Github.
/> git remote add origin REPOSITORY_PATH

* Remove the association
/> git remote remove origin

* Change the association path
/> git remote set-url origin REPOSITORY_PATH

* Look at the association info
/> git remote -v

* Push a branch
/> git push -u origin BRANCH_NAME   o   /> git push origin BRANCH_NAME



— About branches

* Show the branch list
/> git branch

* Create a branch
/> git branch BRANCH_NAME

* Switch to another branch
/> git checkout BRANCH_NAME

* Add change from a specific branch
/> git merge BRANCH_NAME

* Remove a branch
/> git branch -D BRANCH_NAME

* Create a new branch and switch to it at once
/> git checkout -b BRANCH_NAME



— About tags

* Add tag
/> git tag -a vVERSION_NUMBER -m "TAG_COMMENT"

* Push a tag
/> git push origin vVERSION_NUMBER   o   /> git push origin —-tags

* Remove a tag
/> git tag -d vVERSION_NUMBER

* Remove a remote tag
/> git push origin :vVERSION_NUMBER



- Merge new changes from repository but avoiding messing current changes

/> git stash
/> git pull
/> git stash pop



/*
Note:
- .gitignore: file where specifying which files git should ignore.
- .gitkeep: file that make empty folders are recognized by git.
*/
